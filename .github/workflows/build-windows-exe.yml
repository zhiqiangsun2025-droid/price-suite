name: 自动打包Windows EXE

# 触发条件
on:
  push:
    branches: [ main, master ]
    paths:
      - 'client/**'
  pull_request:
    branches: [ main, master ]
  # 手动触发
  workflow_dispatch:

jobs:
  build-windows-exe:
    name: 构建Windows可执行文件
    runs-on: windows-latest
    
    steps:
    - name: 📥 检出代码
      uses: actions/checkout@v3
    
    - name: 🐍 设置Python环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: 📦 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r client/requirements_modern.txt
        pip install pyinstaller==6.3.0
        pip install pytest pytest-mock
    
    - name: 🧪 打包前测试
      run: |
        cd client
        python -m pytest tests/test_utils.py tests/test_config.py -v
      continue-on-error: true
    
    - name: 🔨 打包EXE
      run: |
        cd client
        pyinstaller `
          --name="智能选品系统-v10.10.5" `
          --onefile `
          --windowed `
          --icon=icon.ico `
          --add-data="config_client.json;." `
          --hidden-import=PIL._tkinter_finder `
          --hidden-import=babel.numbers `
          --noconfirm `
          modern_client_ultimate.py
      continue-on-error: false
    
    - name: 📋 查看生成文件
      run: |
        dir client\dist
        
    - name: 📊 检查文件大小
      run: |
        $fileSize = (Get-Item "client\dist\智能选品系统-v10.10.5.exe").Length / 1MB
        Write-Host "EXE文件大小: $([math]::Round($fileSize, 2)) MB"
        if ($fileSize -gt 100) {
          Write-Host "⚠️ 警告: EXE文件过大 (>100MB)"
        }
    
    - name: 🔍 验证EXE文件
      run: |
        if (Test-Path "client\dist\智能选品系统-v10.10.5.exe") {
          Write-Host "✅ EXE文件存在"
          $hash = Get-FileHash "client\dist\智能选品系统-v10.10.5.exe" -Algorithm SHA256
          Write-Host "SHA256: $($hash.Hash)"
        } else {
          Write-Host "❌ EXE文件不存在"
          exit 1
        }
    
    - name: ⬆️ 上传构建产物
      uses: actions/upload-artifact@v3
      with:
        name: 智能选品系统-Windows-v10.10.5
        path: client/dist/*.exe
        retention-days: 30
    
    - name: ✅ 构建成功通知
      run: |
        echo "✅ Windows EXE 构建成功！"
        echo "📦 下载位置：GitHub Actions → Artifacts"

  # 可选：同时构建Linux版本
  build-linux:
    name: 构建Linux可执行文件（可选）
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 检出代码
      uses: actions/checkout@v3
    
    - name: 🐍 设置Python环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: 📦 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r client/requirements_modern.txt
        pip install pyinstaller==6.3.0
    
    - name: 🔨 打包Linux可执行文件
      run: |
        cd client
        pyinstaller \
          --name="智能选品系统-v10.10.5" \
          --onefile \
          --add-data="config_client.json:." \
          --hidden-import=PIL._tkinter_finder \
          --noconfirm \
          modern_client_ultimate.py
    
    - name: ⬆️ 上传构建产物
      uses: actions/upload-artifact@v3
      with:
        name: 智能选品系统-Linux-v10.10.5
        path: client/dist/*
        retention-days: 30

